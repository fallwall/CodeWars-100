Complete the function that returns an array of length n, 
starting with the given number x and the squares of the previous number. 
If n is negative or zero, return an empty array/list.

2, 5  -->  [2, 4, 16, 256, 65536]
3, 3  -->  [3, 9, 81]

=============================================================================

My solution:

function squares(x, n) { 
  let answer = [];
  if (n > 0) {
    answer = [x];
    for (let i=0; i < n-1; i++) {
      answer.push(answer[i] * answer[i]);
    }
  } else {
    answer = [];
  }
  return answer;
}

=============================================================================

simpler one:

function squares(x, n) {
  var ret = [];
  for(var i=0; i<n; i++){
    ret.push(x);
    x*= x;
  }
  return ret;
}


=============================================================================
function squares(x, n) {
  return Array.from({length: n}, (v, k) => Math.pow(x, Math.pow(2, k)))
}
